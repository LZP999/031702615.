#include<iostream>
#include<Windows.h>
#include<fstream>
#pragma once
#include<iostream>
#include<math.h>
#include<fstream>
using namespace std;
class passenger
{
	public:
		int floor ;//记下所在的楼层；
		int sumtime;//记下所用的时间；
		int time = 0, from = 0, to = 0;
		passenger();
		~passenger();
		void run(int time,int from,int to);//显示乘客发出的指令；
		void showfloor1();//显示当前位置；
		void showfloor2();//显示当前位置；
		void showfloor3();//显示当前位置；
};


#include "passenger.h"
ofstream outfile1("output1.txt", ios::out);
ofstream outfile2("output2.txt", ios::out);
ofstream outfile3("output3.txt", ios::out);
passenger::passenger()
{
	sumtime = 0;//初始化最初的层楼时间；
	floor = 1;//初始化最初的层楼位置；
}
void passenger::run(int time, int from, int to)
{
	if (time > sumtime)
	{
		sumtime = time;
		sumtime += abs(from - to);//计算运行该指令所费的时间；
	}
	else sumtime += abs(from - to);//计算运行该指令所费的时间；
	floor = to;
}
void passenger::showfloor1()
{
	outfile1 << sumtime << " " << floor << endl;
	outfile1.close();
}
void passenger::showfloor2()
{
	outfile2 << sumtime << " " << floor << endl;
	outfile2.close();
}
void passenger::showfloor3()
{
	outfile3 << sumtime << " " << floor << endl;
	outfile3.close();
}
passenger::~passenger()
{
}

#pragma once
#include<iostream>
#include<string>
using namespace std;
class elevator1
{
public:
	elevator1();
	~elevator1();
	int Run(int from, int to);//显示乘客在的位置和目的地；
};


#include "elevator1.h"
elevator1::elevator1()
{
}
int elevator1::Run(int from, int to)//判断应该哪部电梯去接；
{
	if (from % 2 != 0 && to % 2 != 0)return('1');
	if ((from == 1 && to % 2 == 0) || (from % 2 == 0 && to == 1) || (from % 2 == 0 && to % 2 == 0))return('3');
	else return('2');
}
elevator1::~elevator1()
{
}



using namespace std;
int main()
{
	ofstream outfile2("output2.txt", ios::out);
	ifstream infile("input.txt", ios::in);
	int n, time=0, from=0, to=0, a;
	passenger p[10000];
	elevator1 q[10000];
	infile >> n;
	passenger::passenger();
	for (int i = 0; i < n; i++)
	{
		infile >> p[i].time >> p[i].from >> p[i].to;
		p[i].run(p[i].time,p[i].from,p[i].to);
		a = q[i].Run(from, to);
		p[i].sumtime++;
		if (a == 1)p[i].showfloor1();
		else if (a == 2)p[i].showfloor2();
		else if (a == 3)p[i].showfloor3();
	}
	outfile2 << "ansjfhn" << endl;
	infile.close();
	system("pause");
	return 0;
}
